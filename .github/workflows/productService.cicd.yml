name: CI/CD Pipeline Service Product

on:
    push:
        branches: [main]
    pull_request:
        branches: [main]

jobs:
    build:
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: ./

        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "20"

            - name: Install dependencies
              run: yarn install

            - name: Run build
              run: yarn build

            - name: Archive build artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: build-artifact # Ensure this matches the download step
                  path: ./build # Adjust to your build output directory

    deploy:
        runs-on: ubuntu-latest
        needs: build
        if: github.ref == 'refs/heads/main'

        steps:
            - name: Download build artifacts
              uses: actions/download-artifact@v4
              with:
                  name: build-artifact # Matches the upload step
                  path: ./build # Adjust as needed

            - name: Prepare Deployment Directories
              uses: appleboy/ssh-action@master
              with:
                  host: ${{ secrets.SERVER_IP }}
                  username: ${{ secrets.SERVER_USERNAME }}
                  key: ${{ secrets.SSH_PRIVATE_KEY }}
                  port: 22
                  script: |
                      mkdir -p /home/ubuntu/apps/build
                      mkdir -p /home/ubuntu/apps/build/configs

            - name: Copy files to Server
              uses: appleboy/scp-action@master
              with:
                  host: ${{ secrets.SERVER_IP }}
                  username: ${{ secrets.SERVER_USERNAME }}
                  key: ${{ secrets.SSH_PRIVATE_KEY }}
                  port: 22
                  source: "./build/*" # Adjusted to match the downloaded artifacts
                  target: "/home/ubuntu/apps/build"
                  strip_components: 1

            - name: Create .env File
              uses: appleboy/ssh-action@master
              with:
                  host: ${{ secrets.SERVER_IP }}
                  username: ${{ secrets.SERVER_USERNAME }}
                  key: ${{ secrets.SSH_PRIVATE_KEY }}
                  port: 22
                  script: |
                      echo "NODE_ENV=production" > /home/ubuntu/apps/build/.env.production
                      echo "PORT=your_port_number" >> /home/ubuntu/apps/build/.env.production
                      echo "DATABASE_URL=your_database_url" >> /home/ubuntu/apps/build/.env.production

            - name: Install Dependencies and Restart Application
              uses: appleboy/ssh-action@master
              with:
                  host: ${{ secrets.SERVER_IP }}
                  username: ${{ secrets.SERVER_USERNAME }}
                  key: ${{ secrets.SSH_PRIVATE_KEY }}
                  port: 22
                  script: |
                      cd /home/ubuntu/apps/build
                      yarn install --production
                      if pm2 show your-service-name > /dev/null; then
                        echo "Application is running. Restarting..."
                        yarn restart
                      else
                        echo "Application is not running. Starting..."
                        yarn start
                      fi
